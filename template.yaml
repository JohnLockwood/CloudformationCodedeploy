AWSTemplateFormatVersion: '2010-09-09'
Resources:
  EC2AccessToCodeDeploy:    
    Type: AWS::IAM::Role
    Properties:            
      AssumeRolePolicyDocument:
        Version: 2012-10-17        
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - ec2.amazonaws.com 
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess 
      RoleName: EC2CodeDeployByCFN
      Description: Cloudformation created allows ec2 full access to CodeDeploy
      Tags:
        -
          Key: course
          Value: AWS Devops Professional
        -
          Key: removeAfter
          Value: 06/2020
  CodeDeployRole:    
    Type: AWS::IAM::Role
    Properties:            
      RoleName: CodeDeployRoleByCFN
      AssumeRolePolicyDocument:
        Version: 2012-10-17        
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - codedeploy.amazonaws.com 
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Description: Cloudformation created allows CodeDeploy to Do Its Thing
      Tags:
        -
          Key: course
          Value: AWS Devops Professional
        -
          Key: removeAfter
          Value: 06/2020
  AWSDevopsProCourseLoadBalancer:
    Type:  AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: AWSDevopsProCourseLoadBalancerSecurityGroup
    Properties:      
      Name:  AWSDevopsProCourseLoadBalancer
      Type:  application
      Scheme: internet-facing
      IpAddressType:  ipv4
      SecurityGroups: 
        - Fn::GetAtt: [ AWSDevopsProCourseLoadBalancerSecurityGroup, GroupId ] 
      Subnets:
        - subnet-976e46a8
        - subnet-b5ccf49a
  
  # AWSDevOpsAutoTargetGroup:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     Name: AWSDevOpsAutoTargetGroup
  #     HealthCheckPath: /
  #     HealthCheckProtocol: HTTP
  #     Protocol:  HTTP
  #     Port: 80
  #     HealthCheckTimeoutSeconds: 5
  #     HealthCheckIntervalSeconds: 10
  #     HealthyThresholdCount: 5
  #      UnhealthyThresholdCount: 2
  #     TargetType: instance
  #     VpcId: vpc-7339af08  # Default

      
  AWSDevopsProCourseLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AWSDevopsProLoadBalancer
      GroupDescription: Allow HTTP on Port 80 for load balancer
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # AWSDevOpsAutoScalingGroup:
  #   Type: AWS::AutoScaling::AutoScalingGroup
  #   DependsOn: AWSDevOpsAutoTargetGroup
  #   Properties:
  #     AutoScalingGroupName: AWSDevOpsAutoScalingGroup
  #     AvailabilityZones:
  #       Fn::GetAZs: ''
  #     MinSize: 1
  #     MaxSize: 3
  #     TargetGroupARNs:        
  #       - !Ref AWSDevOpsAutoTargetGroup
  #     LaunchConfigurationName:
  #       Ref: AWSDevOpsLaunchConfig      
  AWSDevOpsLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-0bba96c31d87e65d9
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: AWSDevopsProCourseLoadBalancerSecurityGroup