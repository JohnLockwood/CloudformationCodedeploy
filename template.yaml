AWSTemplateFormatVersion: '2010-09-09'
Resources:
  EC2AccessToCodeDeploy:    
    Type: AWS::IAM::Role
    Properties:            
      AssumeRolePolicyDocument:
        Version: 2012-10-17        
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - ec2.amazonaws.com 
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeDeployFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess 
      RoleName: EC2CodeDeployByCFN
      Description: Cloudformation created allows ec2 full access to CodeDeploy
      Tags:
        -
          Key: course
          Value: AWS Devops Professional
        -
          Key: removeAfter
          Value: 06/2020
  
  EC2AccessToCodeDeployInstanceProfile:      
    Type: AWS::IAM::InstanceProfile
    DependsOn: EC2AccessToCodeDeploy
    Properties: 
      InstanceProfileName: EC2AccessToCodeDeployInstanceProfile
      Path: /
      Roles: 
        - !Ref EC2AccessToCodeDeploy

  CodeDeployRole:    
    Type: AWS::IAM::Role
    Properties:            
      RoleName: CodeDeployRoleByCFN
      AssumeRolePolicyDocument:
        Version: 2012-10-17        
        Statement:
          - Effect: Allow
            Principal: 
              Service:
                - codedeploy.amazonaws.com 
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      Description: Cloudformation created allows CodeDeploy to Do Its Thing
      Tags:
        -
          Key: course
          Value: AWS Devops Professional
        -
          Key: removeAfter
          Value: 06/2020
  AWSDevopsProCourseLoadBalancer:
    Type:  AWS::ElasticLoadBalancingV2::LoadBalancer
    DependsOn: AWSDevopsProCourseLoadBalancerSecurityGroup
    Properties:      
      Name:  AWSDevopsProCourseLoadBalancer
      Type:  application
      Scheme: internet-facing
      IpAddressType:  ipv4
      SecurityGroups: 
        - Fn::GetAtt: [ AWSDevopsProCourseLoadBalancerSecurityGroup, GroupId ] 
      Subnets:        
        - subnet-2c1fb223
        - subnet-2f71b365
        - subnet-b5ccf49a
        - subnet-ca300997
        - subnet-976e46a8
        - subnet-6e0f130a

  HTTPlistener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: "forward"
          TargetGroupArn: !Ref AWSDevOpsAutoTargetGroup
      LoadBalancerArn: !Ref AWSDevopsProCourseLoadBalancer
      Port: 80
      Protocol: HTTP

  AWSDevOpsAutoTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: AWSDevOpsAutoTargetGroup
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      Protocol:  HTTP
      Port: 80
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 10
      HealthyThresholdCount: 5
      UnhealthyThresholdCount: 2
      TargetType: instance
      VpcId: vpc-7339af08  # Default

      
  AWSDevopsProCourseLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: AWSDevopsProSecurityGroupPort80
      GroupDescription: Allow HTTP on Port 80 for load balancer
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  AWSDevOpsAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: AWSDevOpsAutoTargetGroup
    Properties:
      AutoScalingGroupName: AWSDevOpsAutoScalingGroup
      AvailabilityZones:
        Fn::GetAZs: ''
      MinSize: 3
      MaxSize: 3
      TargetGroupARNs:        
        - !Ref AWSDevOpsAutoTargetGroup
      LaunchConfigurationName:
        Ref: AWSDevOpsLaunchConfig      
        
  AWSDevOpsLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      LaunchConfigurationName: AWSDevOpsLaunchConfiguration
      ImageId:  ami-04b9e92b5572fa0d1
      KeyName: NorthernVirginiaMyEC2KeyPair
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: AWSDevopsProCourseLoadBalancerSecurityGroup
      IamInstanceProfile: !Ref EC2AccessToCodeDeployInstanceProfile
      UserData: 
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install ruby -y
            sudo apt-get install wget -y
            cd /home/ubuntu
            wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install
            chmod +x ./install
            sudo ./install auto
            service codedeploy-agent start
            rm install